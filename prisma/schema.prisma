// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  CREATED
  DISABLED
  ACTIVATED
}

enum UserRole {
  CLIENT
  MANAGER
}

model User {
  id        String     @id @unique @default(uuid())
  firstName String     @db.VarChar(100)
  lastName  String     @db.VarChar(100)
  email     String     @unique() @db.VarChar(60)
  password  String     @db.VarChar(70)
  status    UserStatus @default(CREATED)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  role      UserRole   @default(CLIENT)

  stores Store[]

  @@map("users")
}

enum StoreStatus {
  OPEN
  CLOSED
  DISABLED
}

model Store {
  id        String      @id @default(uuid())
  name      String
  userId    String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())
  status    StoreStatus @default(DISABLED)

  product Product[]
  user    User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("stores")
}

model Product {
  id        String     @id @default(uuid())
  storeId   String
  price     Float
  discount  Float
  category  Category[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())

  user Store @relation(fields: [storeId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("products")
}

model Category {
  id          String   @id @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  products Product[]
}
